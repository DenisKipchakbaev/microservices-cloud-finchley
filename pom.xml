<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>me.kipc.mxs</groupId>
	<version>0.0.1</version>
	<artifactId>mxs-spring-cloud-parent-pom</artifactId>
	<packaging>pom</packaging>
	
	<name>mxs-spring-cloud-parent-pom</name>
	<description>Parent Pom for Spring Cloud sample project</description>
	
	<developers>
		<developer>
			<name>Denis Kipchakbaev</name>
		</developer>
	</developers>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
		<dockerfile-maven-version>1.4.9</dockerfile-maven-version>
		<docker.repository.name>kipc</docker.repository.name>
		
		<!-- System proxy environment variables -->
		<HTTP_PROXY>${env.http_proxy}</HTTP_PROXY>
		<HTTPS_PROXY>${env.https_proxy}</HTTPS_PROXY>
		<NO_PROXY>${env.no_proxy}</NO_PROXY>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<build>
		<pluginManagement>
			<plugins>
				<!--Integrate building docker image steps with maven steps, mvn package will build a docker image,
				mvn deploy will push the image to the repo -->
				<plugin>
				  <groupId>com.spotify</groupId>
				  <artifactId>dockerfile-maven-plugin</artifactId>
				  <version>${dockerfile-maven-version}</version>
				  <executions>
				    <execution>
				      <id>default</id>
				      <goals>
				        <goal>build</goal>
			        	<goal>push</goal>
				      </goals>
				    </execution>
				  </executions>
				  <configuration>
				    <repository>${docker.repository.name}/${project.name}</repository>
				    <tag>${project.version}</tag>
				    <buildArgs>
				      <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
				      <PROJECT_NAME>${project.name}</PROJECT_NAME>
				      <DEVELOPER_NAME>${project.developers[0].name}</DEVELOPER_NAME>
				      <!-- in case of using proxy - pass proxy url from environment variable to buildArgs for building containers, 
				      e.g in Alpine to connect to internet when executing 'apk update...' -->
				      <HTTP_PROXY>${HTTP_PROXY}</HTTP_PROXY>
				      <HTTPS_PROXY>${HTTPS_PROXY}</HTTPS_PROXY>
				      <NO_PROXY>${NO_PROXY}</NO_PROXY>
				    </buildArgs>
				  </configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Using the Resources plugin to filter run.sh, 
			it inserts actual JAR filename and directory name for each module -->
			<plugin>
			    <artifactId>maven-resources-plugin</artifactId>
			    <executions>
			        <execution>
			            <id>copy-resources</id>
						<!-- here the phase you need -->
			            <phase>validate</phase>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <configuration>
			                <outputDirectory>${basedir}/target</outputDirectory>
			                <resources>
			                	<resource>
						            <directory>${basedir}</directory>
						            <filtering>true</filtering>
						            <includes>
						                <include>run.sh</include>
						            </includes>
						        </resource>
			                </resources>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<modules>
		<module>mxs-auth-server</module>
		<module>mxs-config-server</module>
		<module>mxs-eureka-server</module>
		<module>mxs-zuul-gateway</module>
		<module>mxs-licensing-service</module>
		<module>mxs-organization-service</module>
		<module>mxs-spring-boot-admin</module>
		<module>mxs-hystrix-dashboard</module>
		<module>mxs-turbine-stream</module>
	</modules>

	<repositories>
		<repository> 
	        <id>repository.spring.release</id> 
	        <name>Spring GA Repository</name> 
	        <url>http://repo.spring.io/release</url> 
	    </repository>
	    <repository> 
	        <id>repository.spring.milestone</id> 
	        <name>Spring Milestone Repository</name> 
	        <url>http://repo.spring.io/milestone</url> 
	    </repository>
	</repositories>
</project>
