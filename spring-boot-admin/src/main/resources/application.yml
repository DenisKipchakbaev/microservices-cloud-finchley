server:
  port: ${PORT:8090}
  
eureka:   
  instance:
    preferIpAddress: true
#    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health
  client:
#    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761}/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"  
  endpoint:
    health:
      show-details: ALWAYS

#security:
#  oauth2:
#    client:
#      client-id: eagleeye
#      client-secret: thisissecret
#      access-token-uri: http://localhost:8901/oauth/token
#      user-authorization-uri: http://localhost:8901/oauth/authorize
#    resource:
#      user-info-uri: http://localhost:8901/user

---
spring:
  profiles: insecure

---
spring:
  profiles: secure
  security:
    user:
      name: "user"
      password: "password"
eureka:
  instance:
    metadata-map:
      user.name: "user"   #These two are needed so that the server
user.password: "password" #can access the protected client endpoints